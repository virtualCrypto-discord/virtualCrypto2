use Mix.Config

# Configure your database
config :virtualCrypto, VirtualCrypto.Repo,
  username: "postgres",
  password: "postgres",
  database: "virtualcrypto_dev",
  hostname: "localhost",
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with webpack to recompile .js and .css sources.
config :virtualCrypto, VirtualCryptoWeb.Endpoint,
       http: [port: 4001],
       https: [
              port: 4000,
              cipher_suite: :strong,
              keyfile: "priv/cert/selfsigned_key.pem",
              certfile: "priv/cert/selfsigned.pem"
       ],
       debug_errors: true,
       code_reloader: true,
       check_origin: false,
       watchers: [
              node: [
                     "node_modules/webpack/bin/webpack.js",
                     "--mode",
                     "development",
                     "--watch-stdin",
                     cd: Path.expand("../assets", __DIR__)
              ]
       ]

# Watch static and templates for browser reloading.
config :virtualCrypto, VirtualCryptoWeb.Endpoint,
       live_reload: [
              patterns: [
                     ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
                     ~r"priv/gettext/.*(po)$",
                     ~r"lib/virtualCrypto_web/(live|views)/.*(ex)$",
                     ~r"lib/virtualCrypto_web/templates/.*(eex)$",
                     ~r"lib/virtualCrypto_web/templates/.*(leex)$"
              ]
       ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :virtualCrypto, :bot_token, "discord dev portal"

config :virtualCrypto, :public_key, "discord dev portal"

config :virtualCrypto, :client_id, "discord dev portal"

config :virtualCrypto, :client_secret, "discord dev portal"

config :virtualCrypto, :invite_url, "https://discord.com/api/oauth2/authorize?client_id={client_id}&permissions=0&scope=applications.commands%20bot"

config :virtualCrypto, :support_guild_invite_url, "https://discord.com/invite/Hgp5DpG"

config :virtualCrypto, VirtualCrypto.Guardian, issuer: "virtualCrypto", secret_key: "mix guardian.gen.secret"

config :virtualCrypto, :site_url, "https://localhost:4000"

config :virtualCrypto, :discord_oauth2_redirect_uri, "https://localhost:4000/callback/discord"

config :virtualCrypto, VirtualCryptoWeb.Endpoint, live_view: [signing_salt: ""]

config :virtualCrypto, VirtualCrypto.Notification.Webhook.CloudflareWorkers,
  webhook_proxy: "http://127.0.0.1:8787"